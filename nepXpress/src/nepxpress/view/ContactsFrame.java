package nepxpress.view;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;

/**
 *
 * @author kabin
 */
public class ContactsFrame extends JFrame {
    private JTextField fullNameField;
    private JTextField mobileNumberField;
    private JTextField emailField;
    private JTextArea messageArea;
    private JButton contactUsButton;
    private JButton getDirectionButton;

    /**
     * Creates new form java
     */
    public ContactsFrame() {
        initComponents();
        setupUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }// </editor-fold>//GEN-END:initComponents

    private void setupUI() {
        // Main container with padding
        JPanel mainPanel = new JPanel(new BorderLayout());
        mainPanel.setBackground(Color.WHITE);

        // Header panel with title
        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.Y_AXIS));
        headerPanel.setBackground(Color.WHITE);
        headerPanel.setBorder(new EmptyBorder(16,25,16,25));

        JLabel contactsTitle = new JLabel("Contact");
        contactsTitle.setFont(new Font("SansSerif", Font.BOLD, 24));
        contactsTitle.setAlignmentX(Component.LEFT_ALIGNMENT);
        headerPanel.add(contactsTitle);
        
        JSeparator line1 = new JSeparator();
        line1.setMaximumSize(new Dimension(Integer.MAX_VALUE, 1));
        line1.setForeground(new Color(200, 200, 200));
        headerPanel.add(Box.createVerticalStrut(8));
        headerPanel.add(line1);
        
        JSeparator line2 = new JSeparator();
        line2.setMaximumSize(new Dimension(Integer.MAX_VALUE, 1));
        line2.setForeground(new Color(200, 200, 200));
        headerPanel.add(Box.createVerticalStrut(2));
        headerPanel.add(line2);

        mainPanel.add(headerPanel, BorderLayout.NORTH);

        // Content Panel with Contact Info and Form side by side
        JPanel contentPanel = new JPanel(new GridLayout(1, 2, 30, 0));
        contentPanel.setBackground(Color.WHITE);
        contentPanel.setBorder(new EmptyBorder(20, 25, 20, 25));

        // Left side - Contact Information
        JPanel contactInfoPanel = new JPanel();
        contactInfoPanel.setLayout(new BoxLayout(contactInfoPanel, BoxLayout.Y_AXIS));
        contactInfoPanel.setBackground(Color.WHITE);

        // Contact Information Title
        JLabel contactInfoTitle = new JLabel("Contact Information");
        contactInfoTitle.setFont(new Font("SansSerif", Font.BOLD, 20));
        contactInfoTitle.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactInfoPanel.add(contactInfoTitle);
        contactInfoPanel.add(Box.createVerticalStrut(20));

        // Address Section
        JLabel addressTitle = new JLabel("Address");
        addressTitle.setFont(new Font("SansSerif", Font.BOLD, 16));
        addressTitle.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactInfoPanel.add(addressTitle);

        JLabel addressLine1 = new JLabel("Sundarbasti,Budhanilkantha-8");
        JLabel addressLine2 = new JLabel("Kathmandu,Nepal");
        addressLine1.setForeground(Color.GRAY);
        addressLine2.setForeground(Color.GRAY);
        addressLine1.setAlignmentX(Component.LEFT_ALIGNMENT);
        addressLine2.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactInfoPanel.add(addressLine1);
        contactInfoPanel.add(addressLine2);
        
        // Get Direction Button
        getDirectionButton = new JButton("Get Direction");
        getDirectionButton.setForeground(new Color(242, 140, 72)); // Orange color
        getDirectionButton.setBackground(Color.WHITE);
        getDirectionButton.setBorder(BorderFactory.createLineBorder(new Color(242, 140, 72), 1));
        getDirectionButton.setFont(new Font("SansSerif", Font.PLAIN, 14));
        getDirectionButton.setMaximumSize(new Dimension(120, 35));
        getDirectionButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        getDirectionButton.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactInfoPanel.add(Box.createVerticalStrut(10));
        contactInfoPanel.add(getDirectionButton);
        contactInfoPanel.add(Box.createVerticalStrut(20));

        // Phone Section
        JLabel phoneTitle = new JLabel("Phone No");
        phoneTitle.setFont(new Font("SansSerif", Font.BOLD, 16));
        phoneTitle.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactInfoPanel.add(phoneTitle);

        JLabel phone1 = new JLabel("9708059955");
        JLabel phone2 = new JLabel("9814830254");
        phone1.setForeground(Color.GRAY);
        phone2.setForeground(Color.GRAY);
        phone1.setAlignmentX(Component.LEFT_ALIGNMENT);
        phone2.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactInfoPanel.add(phone1);
        contactInfoPanel.add(phone2);
        contactInfoPanel.add(Box.createVerticalStrut(20));

        // Email Section
        JLabel emailTitle = new JLabel("Email");
        emailTitle.setFont(new Font("SansSerif", Font.BOLD, 16));
        emailTitle.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactInfoPanel.add(emailTitle);

        JLabel emailLabel = new JLabel("nepXpresscourier@gmail.com");
        emailLabel.setForeground(Color.GRAY);
        emailLabel.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactInfoPanel.add(emailLabel);

        // Right side - Contact Form
        JPanel contactFormPanel = new JPanel();
        contactFormPanel.setLayout(new BoxLayout(contactFormPanel, BoxLayout.Y_AXIS));
        contactFormPanel.setBackground(Color.WHITE);

        // Contact Form Title
        JLabel formTitle = new JLabel("Contact Form");
        formTitle.setFont(new Font("SansSerif", Font.BOLD, 20));
        formTitle.setAlignmentX(Component.LEFT_ALIGNMENT);
        contactFormPanel.add(formTitle);
        contactFormPanel.add(Box.createVerticalStrut(20));

        // Form Fields
        fullNameField = createFormField("Full Name*");
        addPlaceholderBehavior(fullNameField, "Full Name*");
        mobileNumberField = createFormField("Mobile Number*");
        addPlaceholderBehavior(mobileNumberField, "Mobile Number*");
        emailField = createFormField("Email*");
        addPlaceholderBehavior(emailField, "Email*");
        
        // Message Area
        messageArea = new JTextArea();
        messageArea.setFont(new Font("SansSerif", Font.PLAIN, 14));
        messageArea.setLineWrap(true);
        messageArea.setWrapStyleWord(true);
        messageArea.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(200, 200, 200)),
            BorderFactory.createEmptyBorder(10, 10, 10, 10)
        ));
        addPlaceholderBehavior(messageArea, "Message*");
        JScrollPane scrollPane = new JScrollPane(messageArea);
        scrollPane.setMaximumSize(new Dimension(Integer.MAX_VALUE, 150));
        
        // Character limit label
        JLabel charLimit = new JLabel("maximum 250 characters");
        charLimit.setFont(new Font("SansSerif", Font.ITALIC, 12));
        charLimit.setForeground(Color.GRAY);
        charLimit.setAlignmentX(Component.RIGHT_ALIGNMENT);

        // Contact Us Button
        contactUsButton = new JButton("Contact us");
        contactUsButton.setBackground(new Color(242, 140, 72)); // Orange color
        contactUsButton.setForeground(Color.WHITE);
        contactUsButton.setFont(new Font("SansSerif", Font.BOLD, 14));
        contactUsButton.setMaximumSize(new Dimension(120, 40));
        contactUsButton.setBorderPainted(false);
        contactUsButton.setFocusPainted(false);
        contactUsButton.setCursor(new Cursor(Cursor.HAND_CURSOR));

        // Add components to form panel
        contactFormPanel.add(fullNameField);
        contactFormPanel.add(Box.createVerticalStrut(15));
        contactFormPanel.add(mobileNumberField);
        contactFormPanel.add(Box.createVerticalStrut(15));
        contactFormPanel.add(emailField);
        contactFormPanel.add(Box.createVerticalStrut(15));
        contactFormPanel.add(scrollPane);
        contactFormPanel.add(Box.createVerticalStrut(5));
        contactFormPanel.add(charLimit);
        contactFormPanel.add(Box.createVerticalStrut(20));
        contactFormPanel.add(contactUsButton);

        // Add both panels to content panel
        contentPanel.add(contactInfoPanel);
        contentPanel.add(contactFormPanel);

        mainPanel.add(contentPanel, BorderLayout.CENTER);
        setContentPane(mainPanel);

        // Add action listeners
        contactUsButton.addActionListener(e -> handleContactSubmit());
        getDirectionButton.addActionListener(e -> handleGetDirection());
    }

    private JTextField createFormField(String placeholder) {
        JTextField field = new JTextField(placeholder);
        field.setFont(new Font("SansSerif", Font.PLAIN, 14));
        field.setForeground(Color.GRAY);
        field.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(200, 200, 200)),
            BorderFactory.createEmptyBorder(10, 10, 10, 10)
        ));
        field.setMaximumSize(new Dimension(Integer.MAX_VALUE, 40));
        return field;
    }

    private void handleContactSubmit() {
        String name = fullNameField.getText();
        String mobile = mobileNumberField.getText();
        String email = emailField.getText();
        String message = messageArea.getText();

        if (name.isEmpty() || name.equals("Full Name*") ||
            mobile.isEmpty() || mobile.equals("Mobile Number*") ||
            email.isEmpty() || email.equals("Email*") ||
            message.isEmpty() || message.equals("Message*")) {
            JOptionPane.showMessageDialog(this,
                "Please fill in all required fields",
                "Error",
                JOptionPane.WARNING_MESSAGE);
        } else {
            // Store in DB
            boolean success = new nepxpress.database.ContactMessageDAO().insertContactMessage(
                name, mobile, email, message
            );
            if (success) {
                JOptionPane.showMessageDialog(this,
                    "Message sent successfully!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
                clearForm();
            } else {
                JOptionPane.showMessageDialog(this,
                    "Failed to send message. Please try again.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void handleGetDirection() {
        // Here you would implement the map/direction functionality
        JOptionPane.showMessageDialog(this,
            "Opening map directions...",
            "Get Direction",
            JOptionPane.INFORMATION_MESSAGE);
    }

    private void clearForm() {
        fullNameField.setText("");
        mobileNumberField.setText("");
        emailField.setText("");
        messageArea.setText("");
        // Reset placeholders
        addPlaceholderBehavior(fullNameField, "Full Name*");
        addPlaceholderBehavior(mobileNumberField, "Mobile Number*");
        addPlaceholderBehavior(emailField, "Email*");
        addPlaceholderBehavior(messageArea, "Message*");
    }

    public JPanel getMainPanel() {
        return (JPanel) getContentPane();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    // Add this helper method for JTextField
    private void addPlaceholderBehavior(JTextField field, String placeholder) {
        field.setText(placeholder);
        field.setForeground(Color.GRAY);
        field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent e) {
                if (field.getText().equals(placeholder)) {
                    field.setText("");
                    field.setForeground(Color.BLACK);
                }
            }
            public void focusLost(java.awt.event.FocusEvent e) {
                if (field.getText().isEmpty()) {
                    field.setText(placeholder);
                    field.setForeground(Color.GRAY);
                }
            }
        });
    }

    // Overload for JTextArea
    private void addPlaceholderBehavior(JTextArea area, String placeholder) {
        area.setText(placeholder);
        area.setForeground(Color.GRAY);
        area.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent e) {
                if (area.getText().equals(placeholder)) {
                    area.setText("");
                    area.setForeground(Color.BLACK);
                }
            }
            public void focusLost(java.awt.event.FocusEvent e) {
                if (area.getText().isEmpty()) {
                    area.setText(placeholder);
                    area.setForeground(Color.GRAY);
                }
            }
        });
    }
}