package nepxpress.view;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;

/**
 *
 * @author kabin
 */
public class ComplaintsFrame extends JFrame {
    private JTextField parcelNumberField;
    private JTextField natureField;
    private JTextArea descriptionArea;
    private JButton submitButton;
    private JTextField fullNameField;
    private JTextField mobileNumberField;
    private JTextField emailField;

    /**
     * Creates new form Java
     */
    public ComplaintsFrame() {
        initComponents();
        setupUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }// </editor-fold>//GEN-END:initComponents

    private void setupUI() {
        // Main container with padding
        JPanel mainPanel = new JPanel(new BorderLayout());
        mainPanel.setBackground(Color.WHITE);

        // Header panel with title
        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.Y_AXIS));
        headerPanel.setBackground(Color.WHITE);
        headerPanel.setBorder(new EmptyBorder(16,25,16,25));

        JLabel complaintsTitle = new JLabel("Complaints");
        complaintsTitle.setFont(new Font("SansSerif", Font.BOLD, 24));
        complaintsTitle.setAlignmentX(Component.LEFT_ALIGNMENT);
        headerPanel.add(complaintsTitle);
        
        JSeparator line1 = new JSeparator();
        line1.setMaximumSize(new Dimension(Integer.MAX_VALUE, 1));
        line1.setForeground(new Color(200, 200, 200));
        headerPanel.add(Box.createVerticalStrut(8));
        headerPanel.add(line1);
        
        JSeparator line2 = new JSeparator();
        line2.setMaximumSize(new Dimension(Integer.MAX_VALUE, 1));
        line2.setForeground(new Color(200, 200, 200));
        headerPanel.add(Box.createVerticalStrut(2));
        headerPanel.add(line2);

        mainPanel.add(headerPanel, BorderLayout.NORTH);

        // Form Panel
        JPanel formPanel = new JPanel();
        formPanel.setLayout(new BoxLayout(formPanel, BoxLayout.Y_AXIS));
        formPanel.setBackground(Color.WHITE);
        formPanel.setBorder(new EmptyBorder(20, 25, 20, 25));

        // Title "RAISE TICKETS"
        JLabel raiseTicketsLabel = new JLabel("RAISE TICKETS");
        raiseTicketsLabel.setFont(new Font("SansSerif", Font.BOLD, 32));
        raiseTicketsLabel.setForeground(new Color(242, 140, 72)); // Orange color
        raiseTicketsLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        
        // Add some vertical spacing
        formPanel.add(Box.createVerticalStrut(20));
        formPanel.add(raiseTicketsLabel);
        formPanel.add(Box.createVerticalStrut(40));

        // Form fields panel (to center the form)
        JPanel fieldsPanel = new JPanel();
        fieldsPanel.setLayout(new BoxLayout(fieldsPanel, BoxLayout.Y_AXIS));
        fieldsPanel.setBackground(Color.WHITE);
        fieldsPanel.setAlignmentX(Component.CENTER_ALIGNMENT);
        fieldsPanel.setMaximumSize(new Dimension(600, Integer.MAX_VALUE));

        // Add new contact fields above parcel number
        fullNameField = createStyledTextField("Full Name");
        addPlaceholderBehavior(fullNameField, "Full Name");
        fieldsPanel.add(fullNameField);
        fieldsPanel.add(Box.createVerticalStrut(15));

        mobileNumberField = createStyledTextField("Mobile Number");
        addPlaceholderBehavior(mobileNumberField, "Mobile Number");
        fieldsPanel.add(mobileNumberField);
        fieldsPanel.add(Box.createVerticalStrut(15));

        emailField = createStyledTextField("Email");
        addPlaceholderBehavior(emailField, "Email");
        fieldsPanel.add(emailField);
        fieldsPanel.add(Box.createVerticalStrut(20));

        // Parcel Number Field
        parcelNumberField = createStyledTextField("Enter Parcel Number");
        addPlaceholderBehavior(parcelNumberField, "Enter Parcel Number");
        fieldsPanel.add(parcelNumberField);
        fieldsPanel.add(Box.createVerticalStrut(20));

        // Nature of Complaints Field
        natureField = createStyledTextField("Nature of Complaints");
        addPlaceholderBehavior(natureField, "Nature of Complaints");
        fieldsPanel.add(natureField);
        fieldsPanel.add(Box.createVerticalStrut(20));

        // Description Text Area
        descriptionArea = new JTextArea();
        descriptionArea.setFont(new Font("SansSerif", Font.PLAIN, 14));
        descriptionArea.setLineWrap(true);
        descriptionArea.setWrapStyleWord(true);
        descriptionArea.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(200, 200, 200)),
            BorderFactory.createEmptyBorder(10, 10, 10, 10)
        ));
        descriptionArea.setRows(8);
        JScrollPane scrollPane = new JScrollPane(descriptionArea);
        scrollPane.setMaximumSize(new Dimension(Integer.MAX_VALUE, 200));
        descriptionArea.setText("Describe Your Issue");
        descriptionArea.setForeground(Color.GRAY);
        addPlaceholderBehavior(descriptionArea, "Describe Your Issue");

        fieldsPanel.add(scrollPane);
        fieldsPanel.add(Box.createVerticalStrut(30));

        // Submit Button
        submitButton = new JButton("Submit");
        submitButton.setBackground(new Color(242, 140, 72)); // Orange color
        submitButton.setForeground(Color.WHITE);
        submitButton.setFont(new Font("SansSerif", Font.BOLD, 14));
        submitButton.setPreferredSize(new Dimension(120, 40));
        submitButton.setBorderPainted(false);
        submitButton.setFocusPainted(false);
        submitButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        submitButton.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Button Panel (to center the button)
        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.add(submitButton);
        
        fieldsPanel.add(buttonPanel);

        formPanel.add(fieldsPanel);
        mainPanel.add(formPanel, BorderLayout.CENTER);

        setContentPane(mainPanel);

        // Add action listener for submit button
        submitButton.addActionListener(e -> {
            String fullName = fullNameField.getText();
            String mobile = mobileNumberField.getText();
            String email = emailField.getText();
            String parcelNumber = parcelNumberField.getText();
            String nature = natureField.getText();
            String description = descriptionArea.getText();
            if (fullName.isEmpty() || fullName.equals("Full Name") ||
                mobile.isEmpty() || mobile.equals("Mobile Number") ||
                email.isEmpty() || email.equals("Email") ||
                parcelNumber.isEmpty() || parcelNumber.equals("Enter Parcel Number") ||
                nature.isEmpty() || nature.equals("Nature of Complaints") ||
                description.isEmpty() || description.equals("Describe Your Issue")) {
                JOptionPane.showMessageDialog(this,
                    "Please fill in all fields",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
            } else {
                // Store in DB
                boolean success = new nepxpress.database.ComplaintDAO().insertComplaint(
                    parcelNumber, nature, description, fullName, mobile, email
                );
                if (success) {
                    JOptionPane.showMessageDialog(this,
                        "Complaint submitted successfully!",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
                    clearForm();
                } else {
                    JOptionPane.showMessageDialog(this,
                        "Failed to submit complaint. Please try again.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                }
            }
        });
    }

    private JTextField createStyledTextField(String placeholder) {
        JTextField field = new JTextField(placeholder);
        field.setFont(new Font("SansSerif", Font.PLAIN, 14));
        field.setForeground(Color.GRAY);
        field.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(200, 200, 200)),
            BorderFactory.createEmptyBorder(10, 10, 10, 10)
        ));
        field.setMaximumSize(new Dimension(Integer.MAX_VALUE, 40));
        return field;
    }

    private void addPlaceholderBehavior(JTextField field, String placeholder) {
        field.setText(placeholder);
        field.setForeground(Color.GRAY);
        field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent e) {
                if (field.getText().equals(placeholder)) {
                    field.setText("");
                    field.setForeground(Color.BLACK);
                }
            }
            public void focusLost(java.awt.event.FocusEvent e) {
                if (field.getText().isEmpty()) {
                    field.setText(placeholder);
                    field.setForeground(Color.GRAY);
                }
            }
        });
    }

    private void addPlaceholderBehavior(JTextArea area, String placeholder) {
        area.setText(placeholder);
        area.setForeground(Color.GRAY);
        area.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent e) {
                if (area.getText().equals(placeholder)) {
                    area.setText("");
                    area.setForeground(Color.BLACK);
                }
            }
            public void focusLost(java.awt.event.FocusEvent e) {
                if (area.getText().isEmpty()) {
                    area.setText(placeholder);
                    area.setForeground(Color.GRAY);
                }
            }
        });
    }

    private void clearForm() {
        fullNameField.setText("");
        mobileNumberField.setText("");
        emailField.setText("");
        parcelNumberField.setText("");
        natureField.setText("");
        descriptionArea.setText("");
        // Reset placeholders
        addPlaceholderBehavior(fullNameField, "Full Name");
        addPlaceholderBehavior(mobileNumberField, "Mobile Number");
        addPlaceholderBehavior(emailField, "Email");
        addPlaceholderBehavior(parcelNumberField, "Enter Parcel Number");
        addPlaceholderBehavior(natureField, "Nature of Complaints");
        addPlaceholderBehavior(descriptionArea, "Describe Your Issue");
    }

    public JPanel getMainPanel() {
        return (JPanel) getContentPane();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComplaintsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComplaintsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComplaintsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComplaintsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComplaintsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}